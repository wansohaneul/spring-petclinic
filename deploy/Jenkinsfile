pipeline {
    agent any
    
    tools {
        maven 'M3'
        jdk 'JDK11'
    }
    stages {
        stage('Git init') {
            steps {
                echo 'Git Init'
                git url:'https://github.com/wansohaneul/spring-petclinic.git',
                branch:'main', credentialsId: 'gitCredentials'
            }
        }
        stage('Build') {
            steps {
                echo 'Build'
                sh 'mvn -Dmaven.test.failur.ignore=true clean package'
            }
        }
        stage('Docker Image Build') {
            steps {
                echo 'Docker Image Build'
                dir("${env.WORKSPACE}") {
                    sh 'docker build -t spring-petclinic/spring-petclinic:1.0 .' 
                } 
        stage('Deploy') {
            steps {
                echo 'Deploy'
                sshPublisher(publishers: [sshPublisherDesc(configName: 'target', 
                transfers: [sshTransfer(cleanRemote: false, excludes: '', 
                execCommand: '''
                fuser -k 8080/tcp
                export BUILD_ID=PetClinic
                nohup java -jar /home/ubuntu/deploy/spring-petclinic-2.7.3.jar >> nohup.out 2>&1 &''', 
                execTimeout: 120000, 
                flatten: false, 
                makeEmptyDirs: false, 
                noDefaultExcludes: false, 
                patternSeparator: '[, ]+', 
                remoteDirectory: 'deploy', 
                remoteDirectorySDF: false, 
                removePrefix: 'target', 
                sourceFiles: 'target/*.jar')], 
                usePromotionTimestamp: false, 
                useWorkspaceInPromotion: false, verbose: false)])
            } 
        }
    }
}
